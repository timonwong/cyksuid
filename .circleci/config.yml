# Stolen from pyzmq project
# PyZMQ is licensed under the terms of the Modified BSD License (also known as
# New or Revised BSD), as follows:
#
# Copyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice, this
# list of conditions and the following disclaimer in the documentation and/or
# other materials provided with the distribution.
#
# Neither the name of PyZMQ nor the names of its contributors may be used to
# endorse or promote products derived from this software without specific prior
# written permission.
#
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

version: 2.1

jobs:
  arm-wheels:
    parameters:
      build:
        type: string
      skip:
        type: string
        default: ""

    machine:
      image: ubuntu-2204:2023.07.1
    resource_class: arm.medium

    environment:
      CIBW_SKIP: "<< parameters.skip >> pp*" # skip building pypy wheels since broken (pypa/cibuildwheel#2015)
      CIBW_BUILD: "<< parameters.build >>"
      CIBW_PRERELEASE_PYTHONS: "1"

    steps:
      - checkout
      - run:
          name: install cibuildwheel
          command: |
            python3 -m pip install --upgrade pip setuptools
            python3 -m pip install -r tools/wheel-requirements.txt
      - run:
          name: pip freeze
          command: |
            python3 -m pip freeze
      - run:
          name: Cython
          # This assumes pytest is installed via the install-package step above
          command: |
            python3 setup.py build --with-cython
            rm -rf build
      - run:
          name: list wheels
          command: |
            python3 -m cibuildwheel . --print-build-identifiers
      - run:
          name: cibuildwheel
          command: |
            python3 -m cibuildwheel .
      - store_artifacts:
          path: wheelhouse/

      - when:
          condition:
            matches:
              pattern: ".+"
              value: "<< pipeline.git.tag >>"
          steps:
            - run:
                environment:
                  TWINE_NONINTERACTIVE: "1"
                  TWINE_USERNAME: __token__
                command: |
                  python3 -m pip install twine
                  python3 -m twine upload --skip-existing wheelhouse/*

workflows:
  wheels: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - arm-wheels:
          name: manylinux
          build: "*manylinux*"
          filters:
            tags:
              only: /.*/
      - arm-wheels:
          name: musllinux
          build: "*musllinux*"
          filters:
            tags:
              only: /.*/
